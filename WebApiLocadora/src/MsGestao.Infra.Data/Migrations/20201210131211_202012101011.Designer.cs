// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MsGestao.Infra.Data.Context;

namespace MsGestao.Infra.Data.Migrations
{
    [DbContext(typeof(MsGestaoContext))]
    [Migration("20201210131211_202012101011")]
    partial class _202012101011
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MsGestao.Domain.Models.Cadastro.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Classificacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContatoPJ")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<DateTime>("DataNascimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("IE")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TelefoneCelular")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("TelefonePrincipal")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("TelefoneSecundario")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("TipoPessoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Configuracao.ConfiguracaoGeral", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<Guid>("CentroDeCustoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConsumidorFinalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ManterValorOrcamentoPorXDias")
                        .HasColumnType("int");

                    b.Property<int>("MargemMinimaDeLucro")
                        .HasColumnType("int");

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlanoDeContaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CentroDeCustoId");

                    b.HasIndex("ConsumidorFinalId");

                    b.HasIndex("PlanoDeContaId");

                    b.ToTable("ConfiguracaoGeral");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Estoque.GrupoDeProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("GruposDeProduto");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Estoque.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AlertaBaixoNivelEstoque")
                        .HasColumnType("bit");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bitola")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CodigoBarra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<Guid>("GrupoDeProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("MargemVendaArmada")
                        .HasColumnType("real");

                    b.Property<float>("MargemVendaAvulsa")
                        .HasColumnType("real");

                    b.Property<bool>("MovimentaEstoque")
                        .HasColumnType("bit");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<float>("PesoPorMetro")
                        .HasColumnType("real");

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("QuantidadeEstoque")
                        .HasColumnType("real");

                    b.Property<float>("QuantidadeMaxima")
                        .HasColumnType("real");

                    b.Property<float>("QuantidadeMinima")
                        .HasColumnType("real");

                    b.Property<string>("TipoDeProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TipoDeVergalhao")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<float>("ValorDeCompra")
                        .HasColumnType("real");

                    b.Property<float>("ValorMinimoVenda")
                        .HasColumnType("real");

                    b.Property<float>("ValorVendaArmada")
                        .HasColumnType("real");

                    b.Property<float>("ValorVendaAvulsa")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("GrupoDeProdutoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Financeiro.CentroDeCusto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("CentrosDeCusto");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Financeiro.ContaBancaria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ContasBancarias");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Financeiro.FormaDePagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AVista")
                        .HasColumnType("bit");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("FormasDePagamento");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Financeiro.Lancamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Acrescimo")
                        .HasColumnType("float");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<Guid>("CentroDeCustoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaBancariaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<double>("Desconto")
                        .HasColumnType("float");

                    b.Property<Guid>("FormaDePagamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Historico")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<double>("JurosCompensatorio")
                        .HasColumnType("float");

                    b.Property<double>("JurosMora")
                        .HasColumnType("float");

                    b.Property<double>("Multa")
                        .HasColumnType("float");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlanoDeContaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Quitado")
                        .HasColumnType("bit");

                    b.Property<int>("TipoLancamento")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.Property<double>("ValorPago")
                        .HasColumnType("float");

                    b.Property<Guid?>("VendaId")
                        .HasColumnName("VendaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VendaUnidadeImobiliariaId")
                        .HasColumnName("VendaUnidadeImobiliariaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CentroDeCustoId");

                    b.HasIndex("ContaBancariaId");

                    b.HasIndex("FormaDePagamentoId");

                    b.HasIndex("PessoaId");

                    b.HasIndex("PlanoDeContaId");

                    b.HasIndex("VendaId");

                    b.HasIndex("VendaUnidadeImobiliariaId");

                    b.ToTable("Lancamentos");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Financeiro.PlanoDeConta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PlanosDeConta");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Imobiliario.Empreendimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<Guid>("CentroDeCustoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CodigoMunicipio")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("NaturezaEmpreendimento")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlanoDeContaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<int>("TipoEmpreendimento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CentroDeCustoId");

                    b.HasIndex("PlanoDeContaId");

                    b.ToTable("Empreendimentos");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Imobiliario.Quadra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("EmpreendimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmpreendimentoId");

                    b.ToTable("Quadras");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Imobiliario.Unidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("LarguraFrente")
                        .HasColumnType("float");

                    b.Property<double>("LarguraFundo")
                        .HasColumnType("float");

                    b.Property<double>("LateralDireita")
                        .HasColumnType("float");

                    b.Property<double>("LateralEsquerda")
                        .HasColumnType("float");

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuadraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatusDaUnidade")
                        .HasColumnType("int");

                    b.Property<int>("TipoUnidade")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.Property<double>("ValorVenda")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("QuadraId");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Imobiliario.VendaUnidadeImobiliaria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAprovacaoVenda")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PessoaClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PessoaVendedorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatusDaVenda")
                        .HasColumnType("int");

                    b.Property<int>("TipoDeOperacao")
                        .HasColumnType("int");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PessoaClienteId");

                    b.HasIndex("PessoaVendedorId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("VendaUnidadeImobiliaria");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Venda.ItemDaVenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AlturaEstribo")
                        .HasColumnType("float");

                    b.Property<Guid?>("ArameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DiametroEstribo")
                        .HasColumnType("float");

                    b.Property<double>("DobraEstribo")
                        .HasColumnType("float");

                    b.Property<double>("EspacamentoEstribo")
                        .HasColumnType("float");

                    b.Property<double>("LadoAEstribo")
                        .HasColumnType("float");

                    b.Property<double>("LadoBEstribo")
                        .HasColumnType("float");

                    b.Property<double>("LadoCEstribo")
                        .HasColumnType("float");

                    b.Property<double>("LarguraEstribo")
                        .HasColumnType("float");

                    b.Property<double>("MargemDeLucroItem")
                        .HasColumnType("float");

                    b.Property<double>("PesoArame")
                        .HasColumnType("float");

                    b.Property<double>("PesoVergalhaoEstribo")
                        .HasColumnType("float");

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProdutoAvulsoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("QuantidadeBarraVergalhaoEstribo")
                        .HasColumnType("float");

                    b.Property<int>("QuantidadeEstribo")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeItem")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadePontoAmarracao")
                        .HasColumnType("int");

                    b.Property<double>("RecuoFim")
                        .HasColumnType("float");

                    b.Property<double>("RecuoInicio")
                        .HasColumnType("float");

                    b.Property<string>("TipoDeEstribo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDeProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDeTravamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ValorArame")
                        .HasColumnType("float");

                    b.Property<double>("ValorDoKg")
                        .HasColumnType("float");

                    b.Property<double>("ValorDoMetro")
                        .HasColumnType("float");

                    b.Property<double>("ValorEstribo")
                        .HasColumnType("float");

                    b.Property<double>("ValorTotalItem")
                        .HasColumnType("float");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("float");

                    b.Property<double>("ValorVendaArmadaArame")
                        .HasColumnType("float");

                    b.Property<double>("ValorVendaArmadaVergalhaoEstribo")
                        .HasColumnType("float");

                    b.Property<Guid>("VendaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VergalhaoEstriboId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ArameId");

                    b.HasIndex("ProdutoAvulsoId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("VendaId");

                    b.HasIndex("VergalhaoEstriboId");

                    b.ToTable("ItemsDaVenda");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Venda.Vendas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("DataAprovacaoPedido")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCancelamentoEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCancelamentoPedido")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCancelamentoProducao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataConclusaoProducao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFinalizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFoiProducao")
                        .HasColumnType("datetime2");

                    b.Property<double>("Desconto")
                        .HasColumnType("float");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Frete")
                        .HasColumnType("float");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("MargemDoLucro")
                        .HasColumnType("float");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("NumeroVenda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PesoTotal")
                        .HasColumnType("float");

                    b.Property<Guid>("PessoaClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PessoaVendedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusDaVenda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TemEntrega")
                        .HasColumnType("bit");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("float");

                    b.Property<double>("ValorTotalProdutos")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PessoaClienteId");

                    b.HasIndex("PessoaVendedorId");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Venda.VergalhaoBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<double>("Comprimento")
                        .HasColumnType("float");

                    b.Property<double>("DobraA")
                        .HasColumnType("float");

                    b.Property<double>("DobraB")
                        .HasColumnType("float");

                    b.Property<Guid>("ItemDaVendaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Longitudinal")
                        .HasColumnType("bit");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<Guid>("PessoaEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Quantidade")
                        .HasColumnType("float");

                    b.Property<double>("QuantidadeBarra")
                        .HasColumnType("float");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.Property<double>("ValorVendaArmadaVergalhao")
                        .HasColumnType("float");

                    b.Property<Guid>("VergalhaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemDaVendaId");

                    b.HasIndex("VergalhaoId");

                    b.ToTable("VergalhaoBase");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Configuracao.ConfiguracaoGeral", b =>
                {
                    b.HasOne("MsGestao.Domain.Models.Financeiro.CentroDeCusto", "CentroDeCusto")
                        .WithMany("ConfiguracaoGeral")
                        .HasForeignKey("CentroDeCustoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MsGestao.Domain.Models.Cadastro.Pessoa", "ConsumidorFinal")
                        .WithMany("ConfiguracaoGeral")
                        .HasForeignKey("ConsumidorFinalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MsGestao.Domain.Models.Financeiro.PlanoDeConta", "PlanoDeConta")
                        .WithMany("ConfiguracaoGeral")
                        .HasForeignKey("PlanoDeContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Estoque.Produto", b =>
                {
                    b.HasOne("MsGestao.Domain.Models.Estoque.GrupoDeProduto", "GrupoDeProduto")
                        .WithMany("Produtos")
                        .HasForeignKey("GrupoDeProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Financeiro.Lancamento", b =>
                {
                    b.HasOne("MsGestao.Domain.Models.Financeiro.CentroDeCusto", "CentroDeCusto")
                        .WithMany("Lancamentos")
                        .HasForeignKey("CentroDeCustoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MsGestao.Domain.Models.Financeiro.ContaBancaria", "ContaBancaria")
                        .WithMany("Lancamentos")
                        .HasForeignKey("ContaBancariaId");

                    b.HasOne("MsGestao.Domain.Models.Financeiro.FormaDePagamento", "FormaDePagamento")
                        .WithMany("Lancamentos")
                        .HasForeignKey("FormaDePagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MsGestao.Domain.Models.Cadastro.Pessoa", "Pessoa")
                        .WithMany("Lancamentos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MsGestao.Domain.Models.Financeiro.PlanoDeConta", "PlanoDeConta")
                        .WithMany("Lancamentos")
                        .HasForeignKey("PlanoDeContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MsGestao.Domain.Models.Venda.Vendas", "Venda")
                        .WithMany("Parcelas")
                        .HasForeignKey("VendaId");

                    b.HasOne("MsGestao.Domain.Models.Imobiliario.VendaUnidadeImobiliaria", "VendaUnidadeImobiliaria")
                        .WithMany("Parcelas")
                        .HasForeignKey("VendaUnidadeImobiliariaId");
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Imobiliario.Empreendimento", b =>
                {
                    b.HasOne("MsGestao.Domain.Models.Financeiro.CentroDeCusto", "CentroDeCusto")
                        .WithMany("Empreendimentos")
                        .HasForeignKey("CentroDeCustoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MsGestao.Domain.Models.Financeiro.PlanoDeConta", "PlanoDeConta")
                        .WithMany("Empreendimentos")
                        .HasForeignKey("PlanoDeContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Imobiliario.Quadra", b =>
                {
                    b.HasOne("MsGestao.Domain.Models.Imobiliario.Empreendimento", "Empreendimento")
                        .WithMany("Quadras")
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Imobiliario.Unidade", b =>
                {
                    b.HasOne("MsGestao.Domain.Models.Imobiliario.Quadra", "Quadra")
                        .WithMany("Unidades")
                        .HasForeignKey("QuadraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Imobiliario.VendaUnidadeImobiliaria", b =>
                {
                    b.HasOne("MsGestao.Domain.Models.Cadastro.Pessoa", "PessoaCliente")
                        .WithMany("VendasUnidadeImobiliariaCliente")
                        .HasForeignKey("PessoaClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MsGestao.Domain.Models.Cadastro.Pessoa", "PessoaVendedor")
                        .WithMany("VendasUnidadeImobiliariaVendedor")
                        .HasForeignKey("PessoaVendedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MsGestao.Domain.Models.Imobiliario.Unidade", "Unidade")
                        .WithMany("Vendas")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Venda.ItemDaVenda", b =>
                {
                    b.HasOne("MsGestao.Domain.Models.Estoque.Produto", "Arame")
                        .WithMany("ItensDaVendaArame")
                        .HasForeignKey("ArameId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MsGestao.Domain.Models.Estoque.Produto", "ProdutoAvulso")
                        .WithMany("ItensDaVendaProduto")
                        .HasForeignKey("ProdutoAvulsoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MsGestao.Domain.Models.Estoque.Produto", null)
                        .WithMany("ItensDaVenda")
                        .HasForeignKey("ProdutoId");

                    b.HasOne("MsGestao.Domain.Models.Venda.Vendas", "Venda")
                        .WithMany("ItensDaVenda")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MsGestao.Domain.Models.Estoque.Produto", "VergalhaoEstribo")
                        .WithMany("ItensDaVendaVergalhao")
                        .HasForeignKey("VergalhaoEstriboId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Venda.Vendas", b =>
                {
                    b.HasOne("MsGestao.Domain.Models.Cadastro.Pessoa", "PessoaCliente")
                        .WithMany("VendasCliente")
                        .HasForeignKey("PessoaClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MsGestao.Domain.Models.Cadastro.Pessoa", "PessoaVendedor")
                        .WithMany("VendasVendedor")
                        .HasForeignKey("PessoaVendedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MsGestao.Domain.Models.Venda.VergalhaoBase", b =>
                {
                    b.HasOne("MsGestao.Domain.Models.Venda.ItemDaVenda", "ItemDaVenda")
                        .WithMany("VergalhoesBase")
                        .HasForeignKey("ItemDaVendaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MsGestao.Domain.Models.Estoque.Produto", "Vergalhao")
                        .WithMany("VergalhoesBase")
                        .HasForeignKey("VergalhaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
